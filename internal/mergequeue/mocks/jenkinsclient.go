// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/simplesurance/directorius/internal/mergequeue (interfaces: JenkinsClient)
//
// Generated by this command:
//
//	mockgen -package mocks -destination internal/mergequeue/mocks/jenkinsclient.go github.com/simplesurance/directorius/internal/mergequeue JenkinsClient
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	jenkins "github.com/simplesurance/directorius/internal/jenkins"
	gomock "go.uber.org/mock/gomock"
)

// MockJenkinsClient is a mock of JenkinsClient interface.
type MockJenkinsClient struct {
	ctrl     *gomock.Controller
	recorder *MockJenkinsClientMockRecorder
	isgomock struct{}
}

// MockJenkinsClientMockRecorder is the mock recorder for MockJenkinsClient.
type MockJenkinsClientMockRecorder struct {
	mock *MockJenkinsClient
}

// NewMockJenkinsClient creates a new mock instance.
func NewMockJenkinsClient(ctrl *gomock.Controller) *MockJenkinsClient {
	mock := &MockJenkinsClient{ctrl: ctrl}
	mock.recorder = &MockJenkinsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJenkinsClient) EXPECT() *MockJenkinsClientMockRecorder {
	return m.recorder
}

// Build mocks base method.
func (m *MockJenkinsClient) Build(arg0 context.Context, arg1 *jenkins.Job) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Build", arg0, arg1)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Build indicates an expected call of Build.
func (mr *MockJenkinsClientMockRecorder) Build(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Build", reflect.TypeOf((*MockJenkinsClient)(nil).Build), arg0, arg1)
}

// GetBuildFromQueueItemID mocks base method.
func (m *MockJenkinsClient) GetBuildFromQueueItemID(arg0 context.Context, arg1 int64) (*jenkins.Build, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBuildFromQueueItemID", arg0, arg1)
	ret0, _ := ret[0].(*jenkins.Build)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBuildFromQueueItemID indicates an expected call of GetBuildFromQueueItemID.
func (mr *MockJenkinsClientMockRecorder) GetBuildFromQueueItemID(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBuildFromQueueItemID", reflect.TypeOf((*MockJenkinsClient)(nil).GetBuildFromQueueItemID), arg0, arg1)
}

// String mocks base method.
func (m *MockJenkinsClient) String() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "String")
	ret0, _ := ret[0].(string)
	return ret0
}

// String indicates an expected call of String.
func (mr *MockJenkinsClientMockRecorder) String() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "String", reflect.TypeOf((*MockJenkinsClient)(nil).String))
}
