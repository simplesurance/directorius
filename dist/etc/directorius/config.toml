#http_server_listen_addr = ":8085"
https_server_listen_addr = ":8084"
https_ssl_cert_file = ""
https_ssl_key_file = ""

# the local http and https endpoints that receives github webhook events
github_webhook_endpoint = "/listener/github"
github_webhook_secret = ""

# expose prometheus metrics at the specified endpoint
# prometheus_metrics_endpoint = "/metrics"

# GitHub API token, required when github actions are defined or autoupdate is
# enabled.
github_api_token = "my-secret-token"

# Supported log formats: logfmt, console, json
log_format = "logfmt"

# The key that is used for logging the timestamp. If empty, timestamps will not
# be included in log messages.
log_time_key = "time_iso8601"

# log_level controls the priority threshold for log messages.
# All messages with the the specified or a higher priority are logged.
# Supported values: debug, info, warn, error, panic, fatal
log_level =  "info"

# The autoupdater section configures a feature to automatically update GitHub
# pull request branches with changes from their base branch, in a serialized
# manner.
# autoupdater.repository defines for which GitHub repositories the feature is
# enabled.
[[autoupdater.repository]]
  # the GitHub login name of the subject owning the repository
  owner = "simplesurance"
  repository = "directorius"

# enqueue/dequeue a pull request for autoupdates when one of the labels is added/removed
autoupdater.trigger_labels = ["queue-add"]
# enqueue/dequeue a pull request for autoupdates when auto-merge is enabled
# (https://docs.github.com/en/github/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/automatically-merging-a-pull-request)
autoupdater.trigger_on_auto_merge = true
# queue_pr_head_label is the name of the GitHub label that is applied to the pull
# request that is the first in the autoupdate queue
autoupdater.queue_pr_head_label = "autoupdater-first"
# local http server endpoint under which a minimal webinterface is served
autoupdater.http_endpoint = "/autoupdater"
